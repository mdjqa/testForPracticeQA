package medium.test;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import java.time.Duration;
import java.util.concurrent.TimeUnit;

public class TestWebApp {
    private WebDriver driver;

    @BeforeEach
    public void createAWebBrowserInstance() {
        System.setProperty("webdriver.chrome.driver", "chromedriver.exe");
        driver = new ChromeDriver();
        driver.get("https://www.amazon.com/");
        driver.manage().window().maximize();
        driver.manage().deleteAllCookies();
//        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

//        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
    }

    @Test
    public void testTC1() {

        //4. Get the page title and print it.
        String pageTitle = driver.getTitle();
        System.out.println("\nPage title is: " + pageTitle);

//        try { Thread.sleep(2000); } catch (Exception e) { }

        //5. Click on any link on the page (ex. Sign in).
        driver.findElement(By.id("nav-link-accountList-nav-line-1")).click();

//        try { Thread.sleep(2000); } catch (Exception e) { }

        //6. Get the page title and print it.
         String signInPageTitle = driver.getTitle();
        System.out.println("\nSign in page title is: " + signInPageTitle);

//        try { Thread.sleep(2000); } catch (Exception e) { }

        //7. Navigate back to the home page.
        driver.navigate().to("https://www.amazon.com/");

//        try { Thread.sleep(2000); } catch (Exception e) { }

        //8. Get the page title and verify that it matches with output from point 4.
        String actualPageTitle = driver.getTitle();
        String expectedPageTitle = "Amazon.com. Spend less. Smile more.";

        if (actualPageTitle.equals(expectedPageTitle)) {
            System.out.println("\nPage title is matches with output from point 4.");
        } else {
            System.out.println("\nPage title is not marches with output from point 4");
        }

        //9. Close browser
        driver.close();
        driver.quit();
    }

    @Test
    public void testTC2() {

        //4. Click on Sign in
        driver.findElement(By.id("nav-link-accountList-nav-line-1")).click();

        try { Thread.sleep(2000); } catch (Exception e) { }

        //5.Click Create your Amazon account.
        driver.findElement(By.id("createAccountSubmit")).click();

        try { Thread.sleep(2000); } catch (Exception e) { }
        driver.findElement(By.id("ap_customer_name")).sendKeys("Milija Djordjevic");

        try { Thread.sleep(2000); } catch (Exception e) { }
        driver.findElement(By.id("ap_email")).sendKeys("mdj23best@yahoo.com");

        try { Thread.sleep(2000); } catch (Exception e) { }
        driver.findElement(By.id("ap_password")).sendKeys("1234567891");

        try { Thread.sleep(2000); } catch (Exception e) { }
        driver.findElement(By.id("ap_password_check")).sendKeys("1234567891");

//        try { Thread.sleep(2000); } catch (Exception e) { }
//        driver.findElement(By.id("continue")).click();

        //6. Validate all elements of the registration page.


    }

    @Test
    public  void testTC3() {

        try { Thread.sleep(2000); } catch (Exception e) { }
        //4. Input desired text into search bar.
        driver.findElement(By.xpath("//*[@id=\"twotabsearchtextbox\"]")).sendKeys("iPhone 13 mini");

        //5. Click search button.
        try { Thread.sleep(2000); } catch (Exception e) { }
        driver.findElement(By.id("nav-search-submit-button")).click();

        //6. Check if the first result contains word that you searched for.
        try { Thread.sleep(2000); } catch (Exception e) { }

//        String actualTextSearch = driver.findElement(By.xpath("//*[@id=\"search\"]/div[1]/div[1]/div/span[3]/div[2]/div[1]/div/div/div/div/div/div[2]/div/div/div[1]/h2/a")).getAccessibleName();
//        String expectedTextSearch = "iPhone 13 mini";
//
//        try { Thread.sleep(2000); } catch (Exception e) { }
//
//        if (actualTextSearch.equals(expectedTextSearch)) {
//            System.out.println("\n13\nFirst result contains word that you searched for.");  // treba dopisati 13 karaktere za iPhone 13 mini
//        }else {
//            System.out.println("First result is not contains word that you searched for.");
//        }
    }
}




//        System.setProperty("webdriver.gecko.driver", "geckodriver.exe");
//        WebDriver browser = new FirefoxDriver();{
